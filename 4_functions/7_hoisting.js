// Hoisting представляет процесс доступа к переменным до их определения. Возможно,
// данная концепция выглядит немного странно, но она связана с работой компилятора JavaScript.
// Компиляция кода происходит в два прохода. При первом проходе компилятор получает все
// объявления переменных, все идентификаторы. При этом никакой код не выполняется, методы
// не вызываются. При втором проходе собственно происходит выполнение. И даже если переменная
// определена после непосредственного использования, ошибки не возникнет, так как при первом
// проходе компилятору уже известны все переменные.

console.log(foo);   // undefined
var foo = "Tom";


// Переменные a и b используются до опеределения. По умолчанию им присваиваются значения undefined.
// А если умножить undefined на undefined, то получим Not a Number (NaN).
var c = a * b;
var a = 7;
var b = 3;
console.log(c); // NaN


display();
function display(){
    console.log("Hello Hoisting");
}


display();
var display = function (){
    console.log("Hello Hoisting");
}
